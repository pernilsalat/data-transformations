{"version":3,"file":"pipe.cjs","sources":["../src/pipe.js"],"sourcesContent":["/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * @func\n * @category Function\n * @param {...Function} functions\n * @return {Function} a function that represents the composition of the arguments\n * @see compose\n * @example\n *\n * var f = pipe(Math.pow, toString);\n *\n * f(3, 4); // (3^4).toString()\n *\n * @preserve true\n */\nexport function pipe(...functions) {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return function (value) {\n    return functions.reduce((acc, fn) => fn.call(this, acc), value);\n  };\n}\n"],"names":[],"mappings":";;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBO,SAAS,QAAQ,WAAW;AACjC,MAAI,UAAU,WAAW,GAAG;AAC1B,UAAM,IAAI,MAAM,qCAAqC;AAAA,EACtD;AAED,SAAO,SAAU,OAAO;AACtB,WAAO,UAAU,OAAO,CAAC,KAAK,OAAO,GAAG,KAAK,MAAM,GAAG,GAAG,KAAK;AAAA,EAClE;AACA;;"}