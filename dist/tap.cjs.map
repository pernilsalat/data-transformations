{"version":3,"file":"tap.cjs","sources":["../src/tap.js"],"sourcesContent":["import { xtap } from '#utils/internal/transducers.js';\n\n/**\n * **[Curried function]**\n *\n *\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf U\n * @category Function\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n * const sayX = x => console.log('x is ' + x);\n * tap(sayX, 100); //=> 100\n * // logs 'x is 100'\n *\n * @preserve true\n */\nexport function tap(fn, x) {\n  if (arguments.length === 1) return (_x) => tap(fn, _x);\n\n  if (typeof x?.['@@transducer/step'] === 'function') {\n    return xtap(fn, x);\n  }\n\n  fn(x);\n\n  return x;\n}\n"],"names":["xtap"],"mappings":";;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBO,SAAS,IAAI,IAAI,GAAG;AACzB,MAAI,UAAU,WAAW;AAAG,WAAO,CAAC,OAAO,IAAI,IAAI,EAAE;AAErD,MAAI,QAAO,uBAAI,0BAAyB,YAAY;AAClD,WAAOA,YAAI,KAAC,IAAI,CAAC;AAAA,EAClB;AAED,KAAG,CAAC;AAEJ,SAAO;AACT;;"}