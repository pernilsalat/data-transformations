{"version":3,"file":"bind.cjs","sources":["../src/bind.js"],"sourcesContent":["import { curryN } from '#utils/curryN.js';\n\n/**\n * **[Curried function]**\n *\n *\n * Creates a function that is bound to a context.\n * Note: `bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @category Function\n * @category Object\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @example\n * const log = bind(console.log, console);\n * pipe(inc, log, double)(2); //=> 6\n * // logs: 3\n *\n * @preserve true\n */\nexport function bind(fn, thisObj) {\n  if (arguments.length === 1) {\n    return (_thisObj) => bind(fn, _thisObj);\n  }\n\n  return curryN(fn.length, (...args) => fn.apply(thisObj, args));\n}\n"],"names":["curryN"],"mappings":";;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBO,SAAS,KAAK,IAAI,SAAS;AAChC,MAAI,UAAU,WAAW,GAAG;AAC1B,WAAO,CAAC,aAAa,KAAK,IAAI,QAAQ;AAAA,EACvC;AAED,SAAOA,cAAO,GAAG,QAAQ,IAAI,SAAS,GAAG,MAAM,SAAS,IAAI,CAAC;AAC/D;;"}