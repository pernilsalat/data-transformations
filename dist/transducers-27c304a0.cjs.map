{"version":3,"file":"transducers-27c304a0.cjs","sources":["../src/internal/transducers.js"],"sourcesContent":["const xfbase = (next) => ({\n  '@@transducer/init': function () {\n    return next['@@transducer/init']();\n  },\n  '@@transducer/result': function (state) {\n    return next['@@transducer/result'](state);\n  },\n  '@@transducer/step': function () {\n    throw new Error('Method not implemented');\n  },\n});\n\nexport const xtap = (fn, next) => ({\n  ...xfbase(next),\n  '@@transducer/step': function (state, v, i, m) {\n    fn(v, i, m, state);\n\n    return next['@@transducer/step'](state, v, i, m);\n  },\n});\n\nexport const xfilter = (predicate, next) => ({\n  ...xfbase(next),\n  '@@transducer/step': function (state, v, i, m) {\n    if (predicate(v, i, m, state)) {\n      return next['@@transducer/step'](state, v, i, m);\n    }\n\n    return state;\n  },\n});\n\nexport const xmap = (transform, next) => ({\n  ...xfbase(next),\n  '@@transducer/step': function (state, v, i, m) {\n    return next['@@transducer/step'](state, transform(v, i, m, state), i, m);\n  },\n});\n"],"names":[],"mappings":";AAAA,MAAM,SAAS,CAAC,UAAU;AAAA,EACxB,qBAAqB,WAAY;AAC/B,WAAO,KAAK,mBAAmB;EAChC;AAAA,EACD,uBAAuB,SAAU,OAAO;AACtC,WAAO,KAAK,qBAAqB,EAAE,KAAK;AAAA,EACzC;AAAA,EACD,qBAAqB,WAAY;AAC/B,UAAM,IAAI,MAAM,wBAAwB;AAAA,EACzC;AACH;AAEY,MAAC,OAAO,CAAC,IAAI,UAAU;AAAA,EACjC,GAAG,OAAO,IAAI;AAAA,EACd,qBAAqB,SAAU,OAAO,GAAG,GAAG,GAAG;AAC7C,OAAG,GAAG,GAAG,GAAG,KAAK;AAEjB,WAAO,KAAK,mBAAmB,EAAE,OAAO,GAAG,GAAG,CAAC;AAAA,EAChD;AACH;AAEY,MAAC,UAAU,CAAC,WAAW,UAAU;AAAA,EAC3C,GAAG,OAAO,IAAI;AAAA,EACd,qBAAqB,SAAU,OAAO,GAAG,GAAG,GAAG;AAC7C,QAAI,UAAU,GAAG,GAAG,GAAG,KAAK,GAAG;AAC7B,aAAO,KAAK,mBAAmB,EAAE,OAAO,GAAG,GAAG,CAAC;AAAA,IAChD;AAED,WAAO;AAAA,EACR;AACH;AAEY,MAAC,OAAO,CAAC,WAAW,UAAU;AAAA,EACxC,GAAG,OAAO,IAAI;AAAA,EACd,qBAAqB,SAAU,OAAO,GAAG,GAAG,GAAG;AAC7C,WAAO,KAAK,mBAAmB,EAAE,OAAO,UAAU,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;AAAA,EACxE;AACH;;;;"}