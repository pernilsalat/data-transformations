{"version":3,"file":"complement.js","sources":["../src/complement.js"],"sourcesContent":["/**\n * Takes a function `f` and returns a function `g` such that:\n *\n *   - applying `g` to zero or more arguments will give __true__ if applying\n *     the same arguments to `f` gives a logical __false__ value; and\n *\n *   - applying `g` to zero or more arguments will give __false__ if applying\n *     the same arguments to `f` gives a logical __true__ value.\n *\n * @func\n * @category Logic\n * @param {Function} fn\n * @return {Function}\n * @example\n *\n * const isEven = (n) => n % 2 === 0;\n * const isOdd = complement(isEven);\n *\n * isOdd(21); //=> true\n * isOdd(42); //=> false\n *\n * @preserve true\n */\nexport function complement(fn) {\n  return (...args) => !fn(...args);\n}\n"],"names":[],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBO,SAAS,WAAW,IAAI;AAC7B,SAAO,IAAI,SAAS,CAAC,GAAG,GAAG,IAAI;AACjC;"}