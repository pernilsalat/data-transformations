{"version":3,"file":"is.cjs","sources":["../src/is.js"],"sourcesContent":["import { complement } from '#utils/complement.js';\n\nconst isNil = (x) => x === null || x === undefined;\n\nfunction isType(targetType, x) {\n  if (arguments.length === 1) return (_x) => isType(targetType, _x);\n\n  return !isNil(x) && typeof x === targetType;\n}\n\nfunction isStrict(targetConstructor, x) {\n  if (arguments.length === 1) return (_x) => isStrict(targetConstructor, _x);\n\n  return !isNil(x) && x.constructor === targetConstructor;\n}\n\nfunction _is(targetPrototype, x) {\n  if (arguments.length === 1) return (_x) => _is(targetPrototype, _x);\n\n  return isStrict(targetPrototype, x) || x instanceof targetPrototype;\n}\n\n// isArray :: a -> Bool\nconst isArray = (x) => Array.isArray(x);\n\n// isFunction :: a -> Bool\nconst isFunction = isType('function');\n\n// isString :: a -> Bool\nconst isString = isType('string');\n\n// isObject :: a -> Bool\nconst isObject = isStrict(Object);\n\n// isFunctor :: a -> Bool\nconst isFunctor = (x) => isFunction(x?.map);\n\n// isFilterable :: a -> Bool\nconst isFilterable = (x) => isFunction(x?.filter);\n\n// isSet :: a -> Bool\nconst isSet = _is(Set);\n\n// isMap :: a -> Bool\nconst isMap = _is(Map);\n\n// isIterable :: a -> Bool\nconst isIterable = (x) => isFunction(x?.[Symbol.iterator]);\n\n// isGeneratorFunction :: a -> Bool\nconst isGeneratorFunction = (v) =>\n  Object.prototype.toString.call(v) === '[object GeneratorFunction]';\n\n// isTransducer :: a -> Bool\nconst isTransducer = (x) => isFunction(x?.['@@transducer/step']);\n\n// isPromise :: a -> Bool\nconst isPromise = _is(Promise);\n\n// isThenable :: a -> Bool\nconst isThenable = (x) => isFunction(x?.then);\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor.\n * This function will check up the inheritance chain, if any.\n * * Additionally, it has the following methods for nicer and more semantic\n * type checking:\n * array -\n * function -\n * functor -\n * filterable -\n * generator -\n * iterator -\n * map -\n * object (strict checking) -\n * promise -\n * set -\n * string -\n * thenable -\n * transducer -\n * type -\n * strict -\n * nil -\n * not (negates any of the previous ones)\n * * @func\n * @category Type\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @property {function(*): boolean}  [array]   - Checks if is an Array\n * @property {function(*): boolean}  [function]   - Checks if is type function\n * @property {function(*): boolean}  [functor]   - Checks if it has a map method\n * @property {function(*): boolean}  [filterable]   - Checks if it has a filter method\n * @property {function(*): boolean}  [generator]   - Checks if it is a generator function\n * @property {function(*): boolean}  [iterator]   - Checks if it has [Symbol.iterator] method\n * @property {function(*): boolean}  [map]   - Checks if it is a Map or an instance of a Map\n * @property {function(*): boolean}  [object]   - Checks if the constructor equals to Object (if it is strictly an object)\n * @property {function(*): boolean}  [promise]   - Checks if it is a Promise or an instance of a Promise\n * @property {function(*): boolean}  [set]   - Checks if it is a Set or an instance of a Set\n * @property {function(*): boolean}  [string]   - Checks if it is boolean type\n * @property {function(*): boolean}  [thenable]   - Checks if it has a then method\n * @property {function(*): boolean}  [transducer]   - Checks if it is an object that follows the transducer protocol\n * @property {function(string, *): boolean}  [type]   - Checks if the type matches\n * @property {function(Function, *): boolean}  [strict]   - Checks if the constructor function matches\n * @property {function(*): boolean}  [nil]   - Checks if it is null or undefined\n * @property {Object}  [not]   - negates the following method\n * @property {function(*): boolean}  [not.array]   - Checks if is not an Array\n * @property {function(*): boolean}  [not.function]   - Checks if is not type function\n * @property {function(*): boolean}  [not.functor]   - Checks if it has not a map method\n * @property {function(*): boolean}  [not.filterable]   - Checks if it has not a filter method\n * @property {function(*): boolean}  [not.generator]   - Checks if it is not a generator function\n * @property {function(*): boolean}  [not.iterator]   - Checks if it has not [Symbol.iterator] method\n * @property {function(*): boolean}  [not.map]   - Checks if it is not a Map nor an instance of a Map\n * @property {function(*): boolean}  [not.object]   - Checks if the constructor not equals to Object (if it is strictly not an object)\n * @property {function(*): boolean}  [not.promise]   - Checks if it is not a Promise nor an instance of a Promise\n * @property {function(*): boolean}  [not.set]   - Checks if it is not a Set nor an instance of a Set\n * @property {function(*): boolean}  [not.string]   - Checks if it is not boolean type\n * @property {function(*): boolean}  [not.thenable]   - Checks if it has not a then method\n * @property {function(*): boolean}  [not.transducer]   - Checks if it is not an object that follows the transducer protocol\n * @property {function(string, *): boolean}  [not.type]   - Checks if the type do not matches matches\n * @property {function(Function, *): boolean}  [not.strict]   - Checks if the constructor function do not matches\n * @property {function(*): boolean}  [not.nil]   - Checks if it is not null or undefined\n * @example\n * is.object([]); => false\n * is(Object, []); //=> true\n * is(Object, {}); //=> true\n * is(Number, 1); //=> true\n * is(Object, 1); //=> false\n * is(String, 's'); //=> true\n * is(String, new String('')); //=> true\n * is(Object, new String('')); //=> true\n * is(Object, 's'); //=> false\n * is(Number, {}); //=> false\n * is.function(() => {}); => true\n * is.not.function(() => {}); => false\n *\n * @preserve true\n */\nexport const is = Object.assign(_is, {\n  array: isArray,\n  function: isFunction,\n  functor: isFunctor,\n  filterable: isFilterable,\n  generator: isGeneratorFunction,\n  iterator: isIterable,\n  map: isMap,\n  object: isObject,\n  promise: isPromise,\n  set: isSet,\n  string: isString,\n  thenable: isThenable,\n  transducer: isTransducer,\n  type: isType,\n  strict: isStrict,\n  nil: isNil,\n  not: {\n    array: complement(isArray),\n    function: complement(isFunction),\n    functor: complement(isFunctor),\n    filterable: complement(isFilterable),\n    generator: complement(isGeneratorFunction),\n    iterator: complement(isIterable),\n    map: complement(isMap),\n    object: complement(isObject),\n    promise: complement(isPromise),\n    set: complement(isSet),\n    string: complement(isString),\n    thenable: complement(isThenable),\n    transducer: complement(isTransducer),\n    type: complement(isType),\n    strict: complement(isStrict),\n    nil: complement(isNil),\n  },\n});\n"],"names":["complement"],"mappings":"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"}