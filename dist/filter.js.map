{"version":3,"file":"filter.js","sources":["../src/internal/filters.js","../src/filter.js"],"sourcesContent":["import { xfilter } from '#utils/internal/transducers.js';\n\nconst filterArray = (fn, m) => {\n  const len = m.length;\n  const result = [];\n\n  for (let idx = 0; idx < len; idx++) {\n    const v = m[idx];\n    if (fn(v, idx, m)) {\n      result.push(v);\n    }\n  }\n\n  return result;\n};\n\nconst filterString = (fn, m) => {\n  const length = m.length;\n  let result = '';\n\n  for (let i = 0; i < length; i++) {\n    const char = m[i];\n    if (fn(char, i, m)) {\n      result += char;\n    }\n  }\n\n  return result;\n};\n\nconst filterObj = (fn, m) => {\n  const obj = {};\n  const keys = Object.keys(m);\n  const length = keys.length;\n\n  for (let i = 0; i < length; i++) {\n    const k = keys[i];\n    const v = m[k];\n\n    if (fn(v, k, m)) {\n      obj[k] = v;\n    }\n  }\n\n  return obj;\n};\n\nconst filterFilterable = (fn, m) => m.filter(fn);\n\nconst filterIterator = (fn, it, m) => {\n  let step = it.next();\n  let result = [];\n  let idx = 0;\n\n  while (!step.done) {\n    if (fn(step.value, idx++, m)) {\n      result.push(step.value);\n    }\n\n    step = it.next();\n  }\n\n  return result;\n};\n\nconst filterIterable = (fn, m) => {\n  const it = m[Symbol.iterator].bind(m);\n  return filterIterator(fn, it(), m);\n};\n\nconst filterConstructableIterable = (fn, m) => {\n  const value = filterIterable(fn, m);\n  return new m.constructor(value);\n};\n\nexport const filters = {\n  '[object Array]': filterArray,\n  '[object Method]': filterFilterable,\n  '[object Transducer]': xfilter,\n  '[object Iterator]': filterIterable,\n  '[object Set]': filterConstructableIterable,\n  '[object Map]': filterConstructableIterable,\n  '[object Object]': filterObj,\n  '[object String]': filterString,\n  '[object GeneratorFunction]': (fn, m) => filterIterator(fn, m(), m),\n  '[object Generator]': (fn, m) => filterIterator(fn, m, m),\n};\n","import { filters } from '#utils/internal/filters.js';\nimport { get } from '#utils/internal/get.js';\n\n/**\n * Returns a new list containing only those items that match a given predicate function.\n * The predicate function is passed: **(value, index, collection)**.\n * in the case of filtering and object, the predicate function is passed: **(value, key, collection)**.\n *\n * Note that `filter` does not skip deleted or unassigned indices, unlike the native\n * `Array.prototype.filter` method. For more details on this behavior, see:\n * [Array.prototype.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Description)\n *\n * Acts as a transducer if a transformer is given as second parameter.\n * @see transduce\n *\n * @func\n * @category List\n * @param {Function} fn The function called per iteration.\n * @param {Collection} [collection] The collection to iterate over.\n * @return {Collection|Function} The new filtered array.\n * @example\n *\n * const isEven = (n) => n % 2 === 0;\n * const isValueEven = ([k, v]) => isEven(v)\n * const isVowel = (c) => /[aeiou]/.test(c);\n *\n * filter(isVowel, 'string'); //=> 'i'\n * filter(isEven, [1, 2, 3]); //=> [2]\n * filter(isEven, Set[1, 2, 3]); //=> Set[2]\n * filter(isEven, function* () { yield* [1, 2, 3]}); //=> [2]\n * filter(isEven, { a: 1, b: 2 }); //=> { b: 2 }\n * filter(isValueEven, Map{ a: 1, b: 2 }); //=> Map{ b: 2 }\n *\n * @preserve true\n */\nexport function filter(fn, collection) {\n  if (arguments.length === 1) return (_collection) => filter(fn, _collection);\n\n  if (typeof fn !== 'function') {\n    throw new TypeError(\n      `filter: Please provide a Function for the first argument`,\n    );\n  }\n\n  const type = get.type(collection, 'filter');\n\n  if (type in filters) {\n    return filters[type](fn, collection);\n  }\n\n  throw new TypeError('filter: collection type not supported: ' + type);\n}\n"],"names":[],"mappings":";;AAEA,MAAM,cAAc,CAAC,IAAI,MAAM;AAC7B,QAAM,MAAM,EAAE;AACd,QAAM,SAAS,CAAA;AAEf,WAAS,MAAM,GAAG,MAAM,KAAK,OAAO;AAClC,UAAM,IAAI,EAAE,GAAG;AACf,QAAI,GAAG,GAAG,KAAK,CAAC,GAAG;AACjB,aAAO,KAAK,CAAC;AAAA,IACd;AAAA,EACF;AAED,SAAO;AACT;AAEA,MAAM,eAAe,CAAC,IAAI,MAAM;AAC9B,QAAM,SAAS,EAAE;AACjB,MAAI,SAAS;AAEb,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,UAAM,OAAO,EAAE,CAAC;AAChB,QAAI,GAAG,MAAM,GAAG,CAAC,GAAG;AAClB,gBAAU;AAAA,IACX;AAAA,EACF;AAED,SAAO;AACT;AAEA,MAAM,YAAY,CAAC,IAAI,MAAM;AAC3B,QAAM,MAAM,CAAA;AACZ,QAAM,OAAO,OAAO,KAAK,CAAC;AAC1B,QAAM,SAAS,KAAK;AAEpB,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,UAAM,IAAI,KAAK,CAAC;AAChB,UAAM,IAAI,EAAE,CAAC;AAEb,QAAI,GAAG,GAAG,GAAG,CAAC,GAAG;AACf,UAAI,CAAC,IAAI;AAAA,IACV;AAAA,EACF;AAED,SAAO;AACT;AAEA,MAAM,mBAAmB,CAAC,IAAI,MAAM,EAAE,OAAO,EAAE;AAE/C,MAAM,iBAAiB,CAAC,IAAI,IAAI,MAAM;AACpC,MAAI,OAAO,GAAG;AACd,MAAI,SAAS,CAAA;AACb,MAAI,MAAM;AAEV,SAAO,CAAC,KAAK,MAAM;AACjB,QAAI,GAAG,KAAK,OAAO,OAAO,CAAC,GAAG;AAC5B,aAAO,KAAK,KAAK,KAAK;AAAA,IACvB;AAED,WAAO,GAAG;EACX;AAED,SAAO;AACT;AAEA,MAAM,iBAAiB,CAAC,IAAI,MAAM;AAChC,QAAM,KAAK,EAAE,OAAO,QAAQ,EAAE,KAAK,CAAC;AACpC,SAAO,eAAe,IAAI,GAAI,GAAE,CAAC;AACnC;AAEA,MAAM,8BAA8B,CAAC,IAAI,MAAM;AAC7C,QAAM,QAAQ,eAAe,IAAI,CAAC;AAClC,SAAO,IAAI,EAAE,YAAY,KAAK;AAChC;AAEO,MAAM,UAAU;AAAA,EACrB,kBAAkB;AAAA,EAClB,mBAAmB;AAAA,EACnB,uBAAuB;AAAA,EACvB,qBAAqB;AAAA,EACrB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,8BAA8B,CAAC,IAAI,MAAM,eAAe,IAAI,EAAG,GAAE,CAAC;AAAA,EAClE,sBAAsB,CAAC,IAAI,MAAM,eAAe,IAAI,GAAG,CAAC;AAC1D;ACnFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCO,SAAS,OAAO,IAAI,YAAY;AACrC,MAAI,UAAU,WAAW;AAAG,WAAO,CAAC,gBAAgB,OAAO,IAAI,WAAW;AAE1E,MAAI,OAAO,OAAO,YAAY;AAC5B,UAAM,IAAI;AAAA,MACR;AAAA,IACN;AAAA,EACG;AAED,QAAM,OAAO,IAAI,KAAK,YAAY,QAAQ;AAE1C,MAAI,QAAQ,SAAS;AACnB,WAAO,QAAQ,IAAI,EAAE,IAAI,UAAU;AAAA,EACpC;AAED,QAAM,IAAI,UAAU,4CAA4C,IAAI;AACtE;"}